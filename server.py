# -*- coding: utf-8 -*-

import os
import logging
from datetime import datetime
from flask import Flask, request, jsonify
from flask_cors import CORS

import chatbot

# --- C·∫•u h√¨nh Logging ---
if not os.path.exists('logs'):
    os.makedirs('logs')
log_filename = os.path.join('logs', f'server_{datetime.now().strftime("%Y%m%d")}.log')
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler(log_filename, encoding='utf-8'),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)

# --- Kh·ªüi t·∫°o Flask App v√† CORS ---
app = Flask(__name__)
CORS(app) # C√°ch ƒë∆°n gi·∫£n nh·∫•t ƒë·ªÉ cho ph√©p CORS

# ==============================================================================
# S·ª¨A ƒê·ªîI QUAN TR·ªåNG: X·ª≠ l√Ω c·∫£ 'POST' v√† 'OPTIONS'
# ==============================================================================
@app.route('/api/chat', methods=['POST', 'OPTIONS'])
def handle_chat():
    # Khi tr√¨nh duy·ªát g·ª≠i y√™u c·∫ßu OPTIONS, ta ch·ªâ c·∫ßn tr·∫£ v·ªÅ OK.
    if request.method == 'OPTIONS':
        return jsonify({'status': 'ok'}), 200

    # N·∫øu l√† POST, x·ª≠ l√Ω nh∆∞ b√¨nh th∆∞·ªùng
    if request.method == 'POST':
        try:
            data = request.json
            if not data or 'question' not in data:
                logger.warning("Y√™u c·∫ßu kh√¥ng h·ª£p l·ªá.")
                return jsonify({"text": "Y√™u c·∫ßu kh√¥ng h·ª£p l·ªá.", "videos": []}), 400

            question = data.get('question', '').strip()
            if not question:
                return jsonify({"text": "Vui l√≤ng nh·∫≠p c√¢u h·ªèi.", "videos": []})
            
            logger.info(f"Nh·∫≠n ƒë∆∞·ª£c c√¢u h·ªèi t·ª´ client: '{question}'")
            response_data = chatbot.process_question(question)
            return jsonify(response_data)

        except Exception as e:
            logger.error(f"L·ªói x·ª≠ l√Ω y√™u c·∫ßu: {e}", exc_info=True)
            return jsonify({"text": "L·ªói ph√≠a m√°y ch·ªß.", "videos": []}), 500

@app.route('/api/health', methods=['GET'])
def health_check():
    return jsonify({"status": "ok"})

if __name__ == '__main__':
    print("=" * 60)
    print("ü§ñ     CHATBOT SERVER T∆Ø V·∫§N NGHI·ªÜP V·ª§ Code PTIT     ü§ñ")
    print("=" * 60)
    print(f"Server ƒëang ch·∫°y t·∫°i: http://127.0.0.1:5000")
    app.run(host='0.0.0.0', port=5000, debug=True)